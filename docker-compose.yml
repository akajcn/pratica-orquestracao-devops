version: '3.8'
# Container do serviço do frontendi
services:
  frontend:
    restart: always
    build:
      context: ./frontend
      dockerfile: Dockerfile
    environment:
      - REACT_APP_BACKEND_URL=http://localhost
    depends_on:
      - guess_game
    ports:
      - 3000
    networks:
      - game-network

# Container do serviço do backend
  guess_game:
    restart: always
    build: 
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - FLASK_APP=run.py
      - FLASK_DB_TYPE=postgres
      - FLASK_DB_USER=prjuser
      - FLASK_DB_PASSWORD=prjpass
      - FLASK_DB_NAME=prjdb
      - FLASK_DB_HOST=postgres
      - FLASK_DB_PORT=5432
    scale: 2
    depends_on:
      - postgres
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 20s
    ports:
      - 5000
    networks:
      - game-network

# Container do serviço do banco de dados - PostgreSQL
  postgres:
    restart: always
    image: postgres:latest
    environment:
      POSTGRES_PASSWORD: prjpass
      POSTGRES_USER: prjuser
      POSTGRES_DB: prjdb
    volumes:
      - pg_data:/var/lib/postgresql/data
    ports:
      - 5432
    networks:
      - game-network

# Container do balanceador de carga
  nginx:
    restart: always
    image: nginx:latest
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - frontend
      - guess_game
    ports:
      - 80:80
    networks:
      - game-network

volumes:
  pg_data:
    driver: local
networks:
  game-network:
    driver: bridge
